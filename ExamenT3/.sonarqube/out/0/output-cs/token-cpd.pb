Å
CC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\BD\AppNotasContext.cs
	namespace 	
ExamenT3
 
. 
Models 
{		 
public

 

class

 
AppNotasContext

  
:

  !
	DbContext

" +
{ 
public 
DbSet 
< 
Usuario 
> 
Usuarios &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
Etiqueta 
> 
	Etiquetas (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet 
< 
Nota 
> 
Notas  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
EtiquetaNota !
>! "
EtiquetaNotas# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
DbSet 
< 
UsuarioNota  
>  !
UsuarioNotas" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
AppNotasContext 
( 
DbContextOptions /
</ 0
AppNotasContext0 ?
>? @
optionsA H
)H I
: 
base 
( 
options 
) 
{ 
} 
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
base 
. 
OnModelCreating  
(  !
modelBuilder! -
)- .
;. /
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /

UsuarioMap0 :
(: ;
); <
)< =
;= >
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
EtiquetaMap0 ;
(; <
)< =
)= >
;> ?
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
NotaMap0 7
(7 8
)8 9
)9 :
;: ;
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
EtiquetaNotaMap0 ?
(? @
)@ A
)A B
;B C
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
UsuarioNotaMap0 >
(> ?
)? @
)@ A
;A B
} 	
}   
}!! ù
DC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\BD\Maps\EtiquetaMap.cs
	namespace		 	
ExamenT3		
 
.		 
BD		 
.		 
Maps		 
{

 
public 

class 
EtiquetaMap 
: $
IEntityTypeConfiguration 7
<7 8
Etiqueta8 @
>@ A
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Etiqueta0 8
>8 9
builder: A
)A B
{ 	
builder 
. 
ToTable 
( 
$str '
)' (
;( )
builder 
. 
HasKey 
( 
o 
=> 
o  !
.! "
Id" $
)$ %
;% &
} 	
} 
} ˝
HC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\BD\Maps\EtiquetaNotaMap.cs
	namespace		 	
ExamenT3		
 
.		 
BD		 
.		 
Maps		 
{

 
public 

class 
EtiquetaNotaMap  
:! "$
IEntityTypeConfiguration# ;
<; <
EtiquetaNota< H
>H I
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
EtiquetaNota0 <
>< =
builder> E
)E F
{ 	
builder 
. 
ToTable 
( 
$str +
)+ ,
;, -
builder 
. 
HasKey 
( 
x 
=> 
new  #
{$ %
x& '
.' (

EtiquetaId( 2
,2 3
x4 5
.5 6
NotaId6 <
}= >
)> ?
;? @
builder 
. 
HasOne 
( 
x 
=> 
x  !
.! "
Etiqueta" *
)* +
.+ ,
WithMany, 4
(4 5
x5 6
=>7 9
x: ;
.; <
EtiquetaNotas< I
)I J
.J K
HasForeignKeyK X
(X Y
xY Z
=>[ ]
x^ _
._ `

EtiquetaId` j
)j k
;k l
builder 
. 
HasOne 
( 
x 
=> 
x  !
.! "
Nota" &
)& '
.' (
WithMany( 0
(0 1
x1 2
=>3 5
x6 7
.7 8
EtiquetaNotas8 E
)E F
.F G
HasForeignKeyG T
(T U
xU V
=>W Y
xZ [
.[ \
NotaId\ b
)b c
;c d
} 	
} 
} ¸
@C:\Users\yanmi\source\repos\ExamenT3\ExamenT3\BD\Maps\NotaMap.cs
	namespace		 	
ExamenT3		
 
.		 
BD		 
.		 
Maps		 
{

 
public 

class 
NotaMap 
: $
IEntityTypeConfiguration 3
<3 4
Nota4 8
>8 9
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Nota0 4
>4 5
builder6 =
)= >
{ 	
builder 
. 
ToTable 
( 
$str #
)# $
;$ %
builder 
. 
HasKey 
( 
x 
=> 
x  !
.! "
Id" $
)$ %
;% &
builder 
. 
HasOne 
( 
x 
=> 
x  !
.! "
Creador" )
)) *
.* +
WithMany+ 3
(3 4
x4 5
=>6 8
x9 :
.: ;
Notas; @
)@ A
.A B
HasForeignKeyB O
(O P
xP Q
=>R T
xU V
.V W
	CreadorIdW `
)` a
.a b
OnDeleteb j
(j k
DeleteBehaviork y
.y z
NoAction	z Ç
)
Ç É
;
É Ñ
} 	
} 
} ô
CC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\BD\Maps\UsuarioMap.cs
	namespace		 	
ExamenT3		
 
.		 
BD		 
.		 
Maps		 
{

 
public 

class 

UsuarioMap 
: $
IEntityTypeConfiguration 6
<6 7
Usuario7 >
>> ?
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Usuario0 7
>7 8
builder9 @
)@ A
{ 	
builder 
. 
ToTable 
( 
$str %
)% &
;& '
builder 
. 
HasKey 
( 
o 
=> 
o  !
.! "
Id" $
)$ %
;% &
} 	
} 
} Ù
GC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\BD\Maps\UsuarioNotaMap.cs
	namespace		 	
ExamenT3		
 
.		 
BD		 
.		 
Maps		 
{

 
public 

class 
UsuarioNotaMap 
:  !$
IEntityTypeConfiguration" :
<: ;
UsuarioNota; F
>F G
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
UsuarioNota0 ;
>; <
builder= D
)D E
{ 	
builder 
. 
ToTable 
( 
$str *
)* +
;+ ,
builder 
. 
HasKey 
( 
x 
=> 
new  #
{$ %
x& '
.' (
	UsuarioId( 1
,1 2
x3 4
.4 5
NotaId5 ;
}< =
)= >
;> ?
builder 
. 
HasOne 
( 
x 
=> 
x  !
.! "
Usuario" )
)) *
.* +
WithMany+ 3
(3 4
x4 5
=>6 8
x9 :
.: ;
UsuarioNotas; G
)G H
.H I
HasForeignKeyI V
(V W
xW X
=>Y [
x\ ]
.] ^
	UsuarioId^ g
)g h
;h i
builder 
. 
HasOne 
( 
x 
=> 
x  !
.! "
Nota" &
)& '
.' (
WithMany( 0
(0 1
x1 2
=>3 5
x6 7
.7 8
UsuarioNotas8 D
)D E
.E F
HasForeignKeyF S
(S T
xT U
=>V X
xY Z
.Z [
NotaId[ a
)a b
;b c
} 	
} 
} ª!
KC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Controllers\AuthController.cs
	namespace 	
CalidadT3Tests
 
. 
Controllers $
{ 
public 

class 
AuthController 
:  !

Controller" ,
{ 
private 
readonly 
IUsuarioRepository +
user, 0
;0 1
private 
readonly 
ICookieAuthService +
cookie, 2
;2 3
public 
AuthController 
( 
IUsuarioRepository 0
user1 5
,5 6
ICookieAuthService7 I
cookieJ P
)P Q
{ 	
this 
. 
user 
= 
user 
; 
this 
. 
cookie 
= 
cookie  
;  !
} 	
[ 	
HttpGet	 
] 
public 
IActionResult 
Login "
(" #
)# $
{ 	
return 
View 
( 
) 
; 
} 	
[   	
HttpPost  	 
]   
public!! 
IActionResult!! 
Login!! "
(!!" #
string!!# )
username!!* 2
,!!2 3
string!!4 :
password!!; C
)!!C D
{"" 	
var## 
usuario## 
=## 
user## 
.## 
FindUser## '
(##' (
username##( 0
,##0 1
password##2 :
)##: ;
;##; <
if$$ 
($$ 
usuario$$ 
!=$$ 
null$$ 
)$$  
{%% 
var&& 
claims&& 
=&& 
new&&  
List&&! %
<&&% &
Claim&&& +
>&&+ ,
{&&- .
new'' 
Claim'' 
('' 

ClaimTypes'' (
.''( )
Name'') -
,''- .
username''/ 7
)''7 8
}(( 
;(( 
var** 
claimsIdentity** "
=**# $
new**% (
ClaimsIdentity**) 7
(**7 8
claims**8 >
,**> ?(
CookieAuthenticationDefaults**@ \
.**\ ] 
AuthenticationScheme**] q
)**q r
;**r s
var++ 
claimsPrincipal++ #
=++$ %
new++& )
ClaimsPrincipal++* 9
(++9 :
claimsIdentity++: H
)++H I
;++I J
cookie-- 
.-- 
Login-- 
(-- 
claimsPrincipal-- ,
)--, -
;--- .
return// 
RedirectToAction// '
(//' (
$str//( /
,/// 0
$str//1 7
)//7 8
;//8 9
}00 
ViewBag22 
.22 

Validation22 
=22  
$str22! D
;22D E
return33 
View33 
(33 
)33 
;33 
}44 	
[66 	
HttpGet66	 
]66 
public77 
IActionResult77 
	Registrar77 &
(77& '
)77' (
{88 	
return99 
View99 
(99 
)99 
;99 
}:: 	
[<< 	
HttpPost<<	 
]<< 
public== 
IActionResult== 
	Registrar== &
(==& '
string==' -
username==. 6
,==6 7
string==8 >
password==? G
)==G H
{>> 	
user?? 
.?? 
	Registrar?? 
(?? 
username?? #
,??# $
password??% -
)??- .
;??. /
return@@ 
RedirectToAction@@ #
(@@# $
$str@@$ +
)@@+ ,
;@@, -
}AA 	
publicCC 
ActionResultCC 
LogoutCC "
(CC" #
)CC# $
{DD 	
HttpContextEE 
.EE 
SignOutAsyncEE $
(EE$ %
)EE% &
;EE& '
returnFF 
RedirectToActionFF #
(FF# $
$strFF$ +
)FF+ ,
;FF, -
}GG 	
}HH 
}II ‰
OC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Controllers\EtiquetaController.cs
	namespace		 	
ExamenT3		
 
.		 
Controllers		 
{

 
public 

class 
EtiquetaController #
:$ %

Controller& 0
{ 
private 
IEtiquetaRepository #
etiquetaRepository$ 6
;6 7
public 
EtiquetaController !
(! "
IEtiquetaRepository" 5
etiquetaRepository6 H
)H I
{ 	
this 
. 
etiquetaRepository #
=$ %
etiquetaRepository& 8
;8 9
} 	
[ 	
HttpGet	 
] 
public 
IActionResult 
	Registrar &
(& '
)' (
{ 	
return 
View 
( 
) 
; 
} 	
[ 	
HttpPost	 
] 
public 
IActionResult 
	Registrar &
(& '
Etiqueta' /
etiqueta0 8
)8 9
{ 	
etiquetaRepository 
. 
	Registrar (
(( )
etiqueta) 1
)1 2
;2 3
return 
RedirectToAction #
(# $
$str$ +
,+ ,
$str- 3
)3 4
;4 5
} 	
}   
}!! ‰
KC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Controllers\HomeController.cs
	namespace

 	
ExamenT3


 
.

 
Controllers

 
{ 
public 

class 
HomeController 
:  !

Controller" ,
{ 
private 
readonly 
ILogger  
<  !
HomeController! /
>/ 0
_logger1 8
;8 9
public 
HomeController 
( 
ILogger %
<% &
HomeController& 4
>4 5
logger6 <
)< =
{ 	
_logger 
= 
logger 
; 
} 	
public 
IActionResult 
Index "
(" #
)# $
{ 	
return 
View 
( 
) 
; 
} 	
public 
IActionResult 
Privacy $
($ %
)% &
{ 	
return 
View 
( 
) 
; 
} 	
[ 	
ResponseCache	 
( 
Duration 
=  !
$num" #
,# $
Location% -
=. /!
ResponseCacheLocation0 E
.E F
NoneF J
,J K
NoStoreL S
=T U
trueV Z
)Z [
][ \
public   
IActionResult   
Error   "
(  " #
)  # $
{!! 	
return"" 
View"" 
("" 
new"" 
ErrorViewModel"" *
{""+ ,
	RequestId""- 6
=""7 8
Activity""9 A
.""A B
Current""B I
?""I J
.""J K
Id""K M
??""N P
HttpContext""Q \
.""\ ]
TraceIdentifier""] l
}""m n
)""n o
;""o p
}## 	
}$$ 
}%% ºF
KC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Controllers\NotaController.cs
	namespace 	
ExamenT3
 
. 
Controllers 
{ 
[ 
	Authorize 
] 
public 

class 
NotaController 
:  !

Controller" ,
{ 
private 
INotaRepository 
notaRepository  .
;. /
private 
IEtiquetaRepository #
etiquetaRepository$ 6
;6 7
private 
IUsuarioRepository "
usuarioRepository# 4
;4 5
private 
ICookieAuthService "
cookieService# 0
;0 1
public 
NotaController 
( 
INotaRepository -
notaRepository. <
,< =
IEtiquetaRepository> Q
etiquetaRepositoryR d
,d e
IUsuarioRepositoryf x
usuarioRepository	y ä
,
ä ã 
ICookieAuthService
å û
cookie
ü •
)
• ¶
{ 	
this 
. 
notaRepository 
=  !
notaRepository" 0
;0 1
this 
. 
etiquetaRepository #
=$ %
etiquetaRepository& 8
;8 9
this 
. 
usuarioRepository "
=# $
usuarioRepository% 6
;6 7
this 
. 
cookieService 
=  
cookie! '
;' (
} 	
[ 	
HttpGet	 
] 
public 
IActionResult 
Index "
(" #
string# )
buscar* 0
=1 2
$str3 5
,5 6
int7 :
etiqueta; C
=D E
$numF G
)G H
{ 	
var   
notas   
=   
notaRepository   &
.  & '
Listar  ' -
(  - .
buscar  . 4
,  4 5
etiqueta  6 >
)  > ?
;  ? @
foreach!! 
(!! 
var!! 
nota!! 
in!!  
notas!!! &
)!!& '
{"" 
if## 
(## 
nota## 
.## 
	Contenido## "
.##" #
Length### )
>##* +
$num##, .
)##. /
{$$ 
nota%% 
.%% 
	Contenido%% "
=%%# $
nota%%% )
.%%) *
	Contenido%%* 3
.%%3 4
	Substring%%4 =
(%%= >
$num%%> ?
,%%? @
$num%%A C
)%%C D
;%%D E
}&& 
}'' 
ViewBag(( 
.(( 
Buscar(( 
=(( 
buscar(( #
;((# $
ViewBag)) 
.)) 
Etiqueta)) 
=)) 
etiqueta)) '
;))' (
ViewBag** 
.** 
	Etiquetas** 
=** 
etiquetaRepository**  2
.**2 3
Listar**3 9
(**9 :
)**: ;
;**; <
return++ 
View++ 
(++ 
notas++ 
)++ 
;++ 
},, 	
[.. 	
HttpGet..	 
].. 
public// 
IActionResult// 
Detalle// $
(//$ %
int//% (
id//) +
)//+ ,
{00 	
var11 
nota11 
=11 
notaRepository11 %
.11% &
ObtenerPorId11& 2
(112 3
id113 5
)115 6
;116 7
return22 
View22 
(22 
nota22 
)22 
;22 
}33 	
[55 	
HttpGet55	 
]55 
public66 
IActionResult66 
	Registrar66 &
(66& '
)66' (
{77 	
ViewBag88 
.88 
	Etiquetas88 
=88 
etiquetaRepository88  2
.882 3
Listar883 9
(889 :
)88: ;
;88; <
return99 
View99 
(99 
)99 
;99 
}:: 	
[<< 	
HttpPost<<	 
]<< 
public== 
IActionResult== 
	Registrar== &
(==& '
Nota==' +
nota==, 0
,==0 1
int==2 5
[==5 6
]==6 7
	Etiquetas==8 A
)==A B
{>> 	
notaRepository?? 
.?? 
	Registrar?? $
(??$ %
nota??% )
)??) *
;??* +
notaRepository@@ 
.@@ 
AsignarEtiquetas@@ +
(@@+ ,
nota@@, 0
,@@0 1
	Etiquetas@@2 ;
)@@; <
;@@< =
returnAA 
RedirectToActionAA #
(AA# $
$strAA$ +
)AA+ ,
;AA, -
}BB 	
[DD 	
HttpGetDD	 
]DD 
publicEE 
IActionResultEE 
EditarEE #
(EE# $
intEE$ '
idEE( *
)EE* +
{FF 	
varGG 
notaGG 
=GG 
notaRepositoryGG %
.GG% &
ObtenerPorIdGG& 2
(GG2 3
idGG3 5
)GG5 6
;GG6 7
ViewBagHH 
.HH 
	EtiquetasHH 
=HH 
etiquetaRepositoryHH  2
.HH2 3
ListarHH3 9
(HH9 :
)HH: ;
;HH; <
returnII 
ViewII 
(II 
notaII 
)II 
;II 
}JJ 	
[LL 	
HttpPostLL	 
]LL 
publicMM 
IActionResultMM 
EditarMM #
(MM# $
intMM$ '
idMM( *
,MM* +
NotaMM, 0
notaMM1 5
,MM5 6
intMM7 :
[MM: ;
]MM; <
	EtiquetasMM= F
)MMF G
{NN 	
notaRepositoryOO 
.OO 
EditarOO !
(OO! "
idOO" $
,OO$ %
notaOO& *
)OO* +
;OO+ ,
notaRepositoryPP 
.PP 
AsignarEtiquetasPP +
(PP+ ,
notaPP, 0
,PP0 1
	EtiquetasPP2 ;
)PP; <
;PP< =
returnQQ 
RedirectToActionQQ #
(QQ# $
$strQQ$ -
,QQ- .
newQQ/ 2
{QQ3 4
idQQ5 7
=QQ8 9
idQQ: <
}QQ= >
)QQ> ?
;QQ? @
}RR 	
[TT 	
HttpGetTT	 
]TT 
publicUU 
IActionResultUU 
EliminarUU %
(UU% &
intUU& )
idUU* ,
)UU, -
{VV 	
notaRepositoryWW 
.WW 
EliminarWW #
(WW# $
idWW$ &
)WW& '
;WW' (
returnXX 
RedirectToActionXX #
(XX# $
$strXX$ +
)XX+ ,
;XX, -
}YY 	
[[[ 	
HttpGet[[	 
][[ 
public\\ 
IActionResult\\ 
	Compartir\\ &
(\\& '
int\\' *
id\\+ -
)\\- .
{]] 	
var^^ 
nota^^ 
=^^ 
notaRepository^^ %
.^^% &
ObtenerPorId^^& 2
(^^2 3
id^^3 5
)^^5 6
;^^6 7
var__ 
usuarios__ 
=__ 
usuarioRepository__ ,
.__, -
Listar__- 3
(__3 4
)__4 5
;__5 6
usuarios`` 
.`` 
Remove`` 
(`` 
cookieService`` )
.``) *
GetUserLogged``* 7
(``7 8
)``8 9
)``9 :
;``: ;
ViewBagaa 
.aa 
Usuariosaa 
=aa 
usuariosaa '
;aa' (
returnbb 
Viewbb 
(bb 
notabb 
)bb 
;bb 
}cc 	
[ee 	
HttpPostee	 
]ee 
publicff 
IActionResultff 
	Compartirff &
(ff& '
intff' *
idff+ -
,ff- .
intff/ 2
[ff2 3
]ff3 4
Usuariosff5 =
)ff= >
{gg 	
notaRepositoryhh 
.hh 
	Compartirhh $
(hh$ %
idhh% '
,hh' (
Usuarioshh) 1
)hh1 2
;hh2 3
returnii 
RedirectToActionii #
(ii# $
$strii$ +
)ii+ ,
;ii, -
}jj 	
[ll 	
HttpGetll	 
]ll 
publicmm 
IActionResultmm 
CompartidoConmigomm .
(mm. /
)mm/ 0
{nn 	
varoo 
notasoo 
=oo 
notaRepositoryoo &
.oo& '$
ListarCompartidasConmigooo' ?
(oo? @
)oo@ A
;ooA B
returnpp 
Viewpp 
(pp 
notaspp 
)pp 
;pp 
}qq 	
}rr 
}ss f
RC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Migrations\20211106013512_Initial.cs
	namespace 	
ExamenT3
 
. 

Migrations 
{ 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
trueS W
)W X
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Username 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% 1
,""1 2
x""3 4
=>""5 7
x""8 9
.""9 :
Id"": <
)""< =
;""= >
}## 
)## 
;## 
migrationBuilder%% 
.%% 
CreateTable%% (
(%%( )
name&& 
:&& 
$str&& 
,&& 
columns'' 
:'' 
table'' 
=>'' !
new''" %
{(( 
Id)) 
=)) 
table)) 
.)) 
Column)) %
<))% &
int))& )
>))) *
())* +
type))+ /
:))/ 0
$str))1 6
,))6 7
nullable))8 @
:))@ A
false))B G
)))G H
.** 

Annotation** #
(**# $
$str**$ 8
,**8 9
$str**: @
)**@ A
,**A B
	CreadorId++ 
=++ 
table++  %
.++% &
Column++& ,
<++, -
int++- 0
>++0 1
(++1 2
type++2 6
:++6 7
$str++8 =
,++= >
nullable++? G
:++G H
false++I N
)++N O
,++O P
Titulo,, 
=,, 
table,, "
.,," #
Column,,# )
<,,) *
string,,* 0
>,,0 1
(,,1 2
type,,2 6
:,,6 7
$str,,8 G
,,,G H
nullable,,I Q
:,,Q R
true,,S W
),,W X
,,,X Y
	Contenido-- 
=-- 
table--  %
.--% &
Column--& ,
<--, -
string--- 3
>--3 4
(--4 5
type--5 9
:--9 :
$str--; J
,--J K
nullable--L T
:--T U
true--V Z
)--Z [
,--[ \
UltimaModificacion.. &
=..' (
table..) .
.... /
Column../ 5
<..5 6
DateTime..6 >
>..> ?
(..? @
type..@ D
:..D E
$str..F Q
,..Q R
nullable..S [
:..[ \
false..] b
)..b c
}// 
,// 
constraints00 
:00 
table00 "
=>00# %
{11 
table22 
.22 

PrimaryKey22 $
(22$ %
$str22% /
,22/ 0
x221 2
=>223 5
x226 7
.227 8
Id228 :
)22: ;
;22; <
table33 
.33 

ForeignKey33 $
(33$ %
name44 
:44 
$str44 :
,44: ;
column55 
:55 
x55  !
=>55" $
x55% &
.55& '
	CreadorId55' 0
,550 1
principalTable66 &
:66& '
$str66( 1
,661 2
principalColumn77 '
:77' (
$str77) -
)77- .
;77. /
}88 
)88 
;88 
migrationBuilder:: 
.:: 
CreateTable:: (
(::( )
name;; 
:;; 
$str;; %
,;;% &
columns<< 
:<< 
table<< 
=><< !
new<<" %
{== 

EtiquetaId>> 
=>>  
table>>! &
.>>& '
Column>>' -
<>>- .
int>>. 1
>>>1 2
(>>2 3
type>>3 7
:>>7 8
$str>>9 >
,>>> ?
nullable>>@ H
:>>H I
false>>J O
)>>O P
,>>P Q
NotaId?? 
=?? 
table?? "
.??" #
Column??# )
<??) *
int??* -
>??- .
(??. /
type??/ 3
:??3 4
$str??5 :
,??: ;
nullable??< D
:??D E
false??F K
)??K L
}@@ 
,@@ 
constraintsAA 
:AA 
tableAA "
=>AA# %
{BB 
tableCC 
.CC 

PrimaryKeyCC $
(CC$ %
$strCC% 7
,CC7 8
xCC9 :
=>CC; =
newCC> A
{CCB C
xCCD E
.CCE F

EtiquetaIdCCF P
,CCP Q
xCCR S
.CCS T
NotaIdCCT Z
}CC[ \
)CC\ ]
;CC] ^
tableDD 
.DD 

ForeignKeyDD $
(DD$ %
nameEE 
:EE 
$strEE E
,EEE F
columnFF 
:FF 
xFF  !
=>FF" $
xFF% &
.FF& '

EtiquetaIdFF' 1
,FF1 2
principalTableGG &
:GG& '
$strGG( 3
,GG3 4
principalColumnHH '
:HH' (
$strHH) -
,HH- .
onDeleteII  
:II  !
ReferentialActionII" 3
.II3 4
CascadeII4 ;
)II; <
;II< =
tableJJ 
.JJ 

ForeignKeyJJ $
(JJ$ %
nameKK 
:KK 
$strKK =
,KK= >
columnLL 
:LL 
xLL  !
=>LL" $
xLL% &
.LL& '
NotaIdLL' -
,LL- .
principalTableMM &
:MM& '
$strMM( /
,MM/ 0
principalColumnNN '
:NN' (
$strNN) -
,NN- .
onDeleteOO  
:OO  !
ReferentialActionOO" 3
.OO3 4
CascadeOO4 ;
)OO; <
;OO< =
}PP 
)PP 
;PP 
migrationBuilderRR 
.RR 
CreateTableRR (
(RR( )
nameSS 
:SS 
$strSS $
,SS$ %
columnsTT 
:TT 
tableTT 
=>TT !
newTT" %
{UU 
	UsuarioIdVV 
=VV 
tableVV  %
.VV% &
ColumnVV& ,
<VV, -
intVV- 0
>VV0 1
(VV1 2
typeVV2 6
:VV6 7
$strVV8 =
,VV= >
nullableVV? G
:VVG H
falseVVI N
)VVN O
,VVO P
NotaIdWW 
=WW 
tableWW "
.WW" #
ColumnWW# )
<WW) *
intWW* -
>WW- .
(WW. /
typeWW/ 3
:WW3 4
$strWW5 :
,WW: ;
nullableWW< D
:WWD E
falseWWF K
)WWK L
}XX 
,XX 
constraintsYY 
:YY 
tableYY "
=>YY# %
{ZZ 
table[[ 
.[[ 

PrimaryKey[[ $
([[$ %
$str[[% 6
,[[6 7
x[[8 9
=>[[: <
new[[= @
{[[A B
x[[C D
.[[D E
	UsuarioId[[E N
,[[N O
x[[P Q
.[[Q R
NotaId[[R X
}[[Y Z
)[[Z [
;[[[ \
table\\ 
.\\ 

ForeignKey\\ $
(\\$ %
name]] 
:]] 
$str]] <
,]]< =
column^^ 
:^^ 
x^^  !
=>^^" $
x^^% &
.^^& '
NotaId^^' -
,^^- .
principalTable__ &
:__& '
$str__( /
,__/ 0
principalColumn`` '
:``' (
$str``) -
,``- .
onDeleteaa  
:aa  !
ReferentialActionaa" 3
.aa3 4
Cascadeaa4 ;
)aa; <
;aa< =
tablebb 
.bb 

ForeignKeybb $
(bb$ %
namecc 
:cc 
$strcc A
,ccA B
columndd 
:dd 
xdd  !
=>dd" $
xdd% &
.dd& '
	UsuarioIddd' 0
,dd0 1
principalTableee &
:ee& '
$stree( 1
,ee1 2
principalColumnff '
:ff' (
$strff) -
,ff- .
onDeletegg  
:gg  !
ReferentialActiongg" 3
.gg3 4
Cascadegg4 ;
)gg; <
;gg< =
}hh 
)hh 
;hh 
migrationBuilderjj 
.jj 
CreateIndexjj (
(jj( )
namekk 
:kk 
$strkk /
,kk/ 0
tablell 
:ll 
$strll &
,ll& '
columnmm 
:mm 
$strmm  
)mm  !
;mm! "
migrationBuilderoo 
.oo 
CreateIndexoo (
(oo( )
namepp 
:pp 
$strpp *
,pp* +
tableqq 
:qq 
$strqq 
,qq 
columnrr 
:rr 
$strrr #
)rr# $
;rr$ %
migrationBuildertt 
.tt 
CreateIndextt (
(tt( )
nameuu 
:uu 
$struu .
,uu. /
tablevv 
:vv 
$strvv %
,vv% &
columnww 
:ww 
$strww  
)ww  !
;ww! "
}xx 	
	protectedzz 
overridezz 
voidzz 
Downzz  $
(zz$ %
MigrationBuilderzz% 5
migrationBuilderzz6 F
)zzF G
{{{ 	
migrationBuilder|| 
.|| 
	DropTable|| &
(||& '
name}} 
:}} 
$str}} %
)}}% &
;}}& '
migrationBuilder 
. 
	DropTable &
(& '
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ $
)
ÄÄ$ %
;
ÄÄ% &
migrationBuilder
ÇÇ 
.
ÇÇ 
	DropTable
ÇÇ &
(
ÇÇ& '
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ !
)
ÉÉ! "
;
ÉÉ" #
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
)
ÜÜ 
;
ÜÜ 
migrationBuilder
àà 
.
àà 
	DropTable
àà &
(
àà& '
name
ââ 
:
ââ 
$str
ââ 
)
ââ  
;
ââ  !
}
ää 	
}
ãã 
}åå ê
FC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Models\ErrorViewModel.cs
	namespace 	
ExamenT3
 
. 
Models 
{ 
public 

class 
ErrorViewModel 
{ 
public 
string 
	RequestId 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
bool		 
ShowRequestId		 !
=>		" $
!		% &
string		& ,
.		, -
IsNullOrEmpty		- :
(		: ;
	RequestId		; D
)		D E
;		E F
}

 
} ê
@C:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Models\Etiqueta.cs
	namespace 	
ExamenT3
 
. 
Models 
{ 
public 

class 
Etiqueta 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Nombre 
{ 
get "
;" #
set$ '
;' (
}) *
public 
ICollection 
< 
EtiquetaNota '
>' (
EtiquetaNotas) 6
{7 8
get9 <
;< =
set> A
;A B
}C D
} 
} Û
DC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Models\EtiquetaNota.cs
	namespace 	
ExamenT3
 
. 
Models 
{ 
public 

class 
EtiquetaNota 
{		 
public

 
int

 

EtiquetaId

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
Etiqueta 
Etiqueta  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
NotaId 
{ 
get 
;  
set! $
;$ %
}& '
public 
Nota 
Nota 
{ 
get 
; 
set  #
;# $
}% &
} 
} ﬂ
<C:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Models\Nota.cs
	namespace 	
ExamenT3
 
. 
Models 
{ 
public 

class 
Nota 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
int 
	CreadorId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Usuario 
Creador 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Titulo 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
	Contenido 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
UltimaModificacion *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
ICollection 
< 
EtiquetaNota '
>' (
EtiquetaNotas) 6
{7 8
get9 <
;< =
set> A
;A B
}C D
public 
ICollection 
< 
UsuarioNota &
>& '
UsuarioNotas( 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
} 
} ¯
?C:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Models\Usuario.cs
	namespace 	
ExamenT3
 
. 
Models 
{ 
public 

class 
Usuario 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
ICollection 
< 
Nota 
>  
Notas! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
ICollection 
< 
UsuarioNota &
>& '
UsuarioNotas( 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
} 
} Ó
CC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Models\UsuarioNota.cs
	namespace 	
ExamenT3
 
. 
Models 
{ 
public 

class 
UsuarioNota 
{		 
public

 
int

 
	UsuarioId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
Usuario 
Usuario 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
NotaId 
{ 
get 
;  
set! $
;$ %
}& '
public 
Nota 
Nota 
{ 
get 
; 
set  #
;# $
}% &
} 
} é

8C:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Program.cs
	namespace

 	
ExamenT3


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ´
NC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Repository\EtiquetaRepository.cs
	namespace 	
ExamenT3
 
. 

Repository 
{ 
public		 

	interface		 
IEtiquetaRepository		 (
{

 
public 
ICollection 
< 
Etiqueta #
># $
Listar% +
(+ ,
), -
;- .
public 
void 
	Registrar 
( 
Etiqueta &
etiqueta' /
)/ 0
;0 1
} 
public 

class 
EtiquetaRepository #
:$ %
IEtiquetaRepository& 9
{ 
private 
AppNotasContext 
context  '
;' (
public 
EtiquetaRepository !
(! "
AppNotasContext" 1
context2 9
)9 :
{ 	
this 
. 
context 
= 
context "
;" #
} 	
public 
ICollection 
< 
Etiqueta #
># $
Listar% +
(+ ,
), -
{ 	
return 
context 
. 
	Etiquetas $
.$ %
ToList% +
(+ ,
), -
;- .
} 	
public 
void 
	Registrar 
( 
Etiqueta &
etiqueta' /
)/ 0
{ 	
context 
. 
Add 
( 
etiqueta  
)  !
;! "
context   
.   
SaveChanges   
(    
)    !
;  ! "
}!! 	
}"" 
}## Íh
JC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Repository\NotaRepository.cs
	namespace		 	
ExamenT3		
 
.		 

Repository		 
{

 
public 

	interface 
INotaRepository $
{ 
public 
ICollection 
< 
Nota 
>  
Listar! '
(' (
string( .
buscar/ 5
,5 6
int7 :
etiqueta; C
)C D
;D E
public 
Nota 
ObtenerPorId  
(  !
int! $
id% '
)' (
;( )
public 
void 
	Registrar 
( 
Nota "
nota# '
)' (
;( )
public 
void 
AsignarEtiquetas $
($ %
Nota% )
nota* .
,. /
int0 3
[3 4
]4 5
etiquetasId6 A
)A B
;B C
public 
void 
Editar 
( 
int 
id !
,! "
Nota# '
nota( ,
), -
;- .
public 
void 
Eliminar 
( 
int  
id! #
)# $
;$ %
public 
void 
	Compartir 
( 
int !
id" $
,$ %
int& )
[) *
]* +

usuariosId, 6
)6 7
;7 8
public 
ICollection 
< 
Nota 
>  $
ListarCompartidasConmigo! 9
(9 :
): ;
;; <
} 
public 

class 
NotaRepository 
:  !
INotaRepository" 1
{ 
private 
AppNotasContext 
context  '
;' (
private 
ICookieAuthService "
cookie# )
;) *
public 
NotaRepository 
( 
AppNotasContext -
context. 5
,5 6
ICookieAuthService7 I
cookieJ P
)P Q
{ 	
this 
. 
context 
= 
context "
;" #
this 
. 
cookie 
= 
cookie  
;  !
}   	
public"" 
void"" 
	Compartir"" 
("" 
int"" !
id""" $
,""$ %
int""& )
["") *
]""* +

usuariosId"", 6
)""6 7
{## 	
var$$ 
usuariosNotas$$ 
=$$ 
context$$  '
.$$' (
UsuarioNotas$$( 4
.$$4 5
Where$$5 :
($$: ;
x$$; <
=>$$= ?
x$$@ A
.$$A B
NotaId$$B H
==$$I K
id$$L N
)$$N O
;$$O P
context%% 
.%% 
UsuarioNotas%%  
.%%  !
RemoveRange%%! ,
(%%, -
usuariosNotas%%- :
)%%: ;
;%%; <
context&& 
.&& 
SaveChanges&& 
(&&  
)&&  !
;&&! "
foreach(( 
((( 
var(( 
	usuarioId(( "
in((# %

usuariosId((& 0
)((0 1
{)) 
context** 
.** 
UsuarioNotas** $
.**$ %
Add**% (
(**( )
new**) ,
UsuarioNota**- 8
{**9 :
	UsuarioId**; D
=**E F
	usuarioId**G P
,**P Q
NotaId**R X
=**Y Z
id**[ ]
}**^ _
)**_ `
;**` a
}++ 
context,, 
.,, 
SaveChanges,, 
(,,  
),,  !
;,,! "
}-- 	
public// 
void// 
Editar// 
(// 
int// 
id// !
,//! "
Nota//# '
nota//( ,
)//, -
{00 	
var11 
notaBd11 
=11 
ObtenerPorId11 %
(11% &
id11& (
)11( )
;11) *
notaBd22 
.22 
Titulo22 
=22 
nota22  
.22  !
Titulo22! '
;22' (
notaBd33 
.33 
	Contenido33 
=33 
nota33 #
.33# $
	Contenido33$ -
;33- .
notaBd44 
.44 
UltimaModificacion44 %
=44& '
DateTime44( 0
.440 1
Now441 4
;444 5
context55 
.55 
SaveChanges55 
(55  
)55  !
;55! "
}66 	
public88 
void88 
Eliminar88 
(88 
int88  
id88! #
)88# $
{99 	
var:: 
nota:: 
=:: 
context:: 
.:: 
Notas:: $
.::$ %
Where::% *
(::* +
x::+ ,
=>::- /
x::0 1
.::1 2
Id::2 4
==::5 7
id::8 :
)::: ;
.::; <
First::< A
(::A B
)::B C
;::C D
context;; 
.;; 
Notas;; 
.;; 
Remove;;  
(;;  !
nota;;! %
);;% &
;;;& '
context<< 
.<< 
SaveChanges<< 
(<<  
)<<  !
;<<! "
}== 	
public?? 
ICollection?? 
<?? 
Nota?? 
>??  
Listar??! '
(??' (
string??( .
buscar??/ 5
,??5 6
int??7 :
etiqueta??; C
)??C D
{@@ 	
varAA 
userAA 
=AA 
cookieAA 
.AA 
GetUserLoggedAA +
(AA+ ,
)AA, -
;AA- .
ifCC 
(CC 
etiquetaCC 
>CC 
$numCC 
)CC 
{DD 
varEE 
etiquetaNotasEE !
=EE" #
contextEE$ +
.EE+ ,
EtiquetaNotasEE, 9
.EE9 :
IncludeEE: A
(EEA B
xEEB C
=>EED F
xEEG H
.EEH I
NotaEEI M
)EEM N
.EEN O
WhereEEO T
(EET U
xEEU V
=>EEW Y
xEEZ [
.EE[ \

EtiquetaIdEE\ f
==EEg i
etiquetaEEj r
)EEr s
.EEs t
ToListEEt z
(EEz {
)EE{ |
;EE| }
varFF 
notasFF 
=FF 
newFF 
ListFF  $
<FF$ %
NotaFF% )
>FF) *
(FF* +
)FF+ ,
;FF, -
foreachHH 
(HH 
varHH 
etiquetaNotaHH )
inHH* ,
etiquetaNotasHH- :
)HH: ;
{II 
varJJ 
notaJJ 
=JJ 
etiquetaNotaJJ +
.JJ+ ,
NotaJJ, 0
;JJ0 1
ifKK 
(KK 
notaKK 
.KK 
	CreadorIdKK &
==KK' )
userKK* .
.KK. /
IdKK/ 1
)KK1 2
{LL 
notasMM 
.MM 
AddMM !
(MM! "
etiquetaNotaMM" .
.MM. /
NotaMM/ 3
)MM3 4
;MM4 5
}NN 
}OO 
returnQQ 
notasQQ 
;QQ 
}RR 
ifTT 
(TT 
buscarTT 
!=TT 
$strTT 
)TT 
{UU 
returnVV 
contextVV 
.VV 
NotasVV $
.VV$ %
WhereVV% *
(VV* +
xVV+ ,
=>VV- /
xVV0 1
.VV1 2
	CreadorIdVV2 ;
==VV< >
userVV? C
.VVC D
IdVVD F
)VVF G
.VVG H
WhereVVH M
(VVM N
xVVN O
=>VVP R
xVVS T
.VVT U
TituloVVU [
.VV[ \
ContainsVV\ d
(VVd e
buscarVVe k
)VVk l
||VVm o
xVVp q
.VVq r
	ContenidoVVr {
.VV{ |
Contains	VV| Ñ
(
VVÑ Ö
buscar
VVÖ ã
)
VVã å
)
VVå ç
.
VVç é
ToList
VVé î
(
VVî ï
)
VVï ñ
;
VVñ ó
}WW 
returnXX 
contextXX 
.XX 
NotasXX  
.XX  !
WhereXX! &
(XX& '
xXX' (
=>XX) +
xXX, -
.XX- .
	CreadorIdXX. 7
==XX8 :
userXX; ?
.XX? @
IdXX@ B
)XXB C
.XXC D
ToListXXD J
(XXJ K
)XXK L
;XXL M
}YY 	
public[[ 
ICollection[[ 
<[[ 
Nota[[ 
>[[  $
ListarCompartidasConmigo[[! 9
([[9 :
)[[: ;
{\\ 	
var]] 
user]] 
=]] 
cookie]] 
.]] 
GetUserLogged]] +
(]]+ ,
)]], -
;]]- .
var^^ 
compartidos^^ 
=^^ 
context^^ %
.^^% &
UsuarioNotas^^& 2
.^^2 3
Include^^3 :
(^^: ;
x^^; <
=>^^= ?
x^^@ A
.^^A B
Nota^^B F
)^^F G
.^^G H
Where^^H M
(^^M N
x^^N O
=>^^P R
x^^S T
.^^T U
	UsuarioId^^U ^
==^^_ a
user^^b f
.^^f g
Id^^g i
)^^i j
.^^j k
ToList^^k q
(^^q r
)^^r s
;^^s t
var__ 
notas__ 
=__ 
new__ 
List__  
<__  !
Nota__! %
>__% &
(__& '
)__' (
;__( )
foreach`` 
(`` 
var`` 

compartido`` #
in``$ &
compartidos``' 2
)``2 3
{aa 
notasbb 
.bb 
Addbb 
(bb 

compartidobb $
.bb$ %
Notabb% )
)bb) *
;bb* +
}cc 
returndd 
notasdd 
;dd 
}ee 	
publicgg 
voidgg 
	Registrargg 
(gg 
Notagg "
notagg# '
)gg' (
{hh 	
notaii 
.ii 
	CreadorIdii 
=ii 
cookieii #
.ii# $
GetUserLoggedii$ 1
(ii1 2
)ii2 3
.ii3 4
Idii4 6
;ii6 7
notajj 
.jj 
UltimaModificacionjj #
=jj$ %
DateTimejj& .
.jj. /
Nowjj/ 2
;jj2 3
contextkk 
.kk 
Notaskk 
.kk 
Addkk 
(kk 
notakk "
)kk" #
;kk# $
contextll 
.ll 
SaveChangesll 
(ll  
)ll  !
;ll! "
}mm 	
publicoo 
Notaoo 
ObtenerPorIdoo  
(oo  !
intoo! $
idoo% '
)oo' (
{pp 	
returnqq 
contextqq 
.qq 
Notasqq  
.qq  !
Whereqq! &
(qq& '
xqq' (
=>qq) +
xqq, -
.qq- .
Idqq. 0
==qq1 3
idqq4 6
)qq6 7
.qq7 8
Includeqq8 ?
(qq? @
xqq@ A
=>qqB D
xqqE F
.qqF G
EtiquetaNotasqqG T
)qqT U
.qqU V
ThenIncludeqqV a
(qqa b
xqqb c
=>qqd f
xqqg h
.qqh i
Etiquetaqqi q
)qqq r
.qqr s
Firstqqs x
(qqx y
)qqy z
;qqz {
}rr 	
publictt 
voidtt 
AsignarEtiquetastt $
(tt$ %
Notatt% )
notatt* .
,tt. /
inttt0 3
[tt3 4
]tt4 5
etiquetasIdtt6 A
)ttA B
{uu 	
varvv 
etiquetasNotasvv 
=vv  
contextvv! (
.vv( )
EtiquetaNotasvv) 6
.vv6 7
Wherevv7 <
(vv< =
xvv= >
=>vv? A
xvvB C
.vvC D
NotaIdvvD J
==vvK M
notavvN R
.vvR S
IdvvS U
)vvU V
;vvV W
contextww 
.ww 
EtiquetaNotasww !
.ww! "
RemoveRangeww" -
(ww- .
etiquetasNotasww. <
)ww< =
;ww= >
contextxx 
.xx 
SaveChangesxx 
(xx  
)xx  !
;xx! "
foreachzz 
(zz 
intzz 

etiquetaIdzz #
inzz$ &
etiquetasIdzz' 2
)zz2 3
{{{ 
context|| 
.|| 
EtiquetaNotas|| %
.||% &
Add||& )
(||) *
new||* -
EtiquetaNota||. :
{||; <

EtiquetaId}} 
=}}  

etiquetaId}}! +
,}}+ ,
NotaId~~ 
=~~ 
nota~~ !
.~~! "
Id~~" $
} 
) 
; 
}
ÄÄ 
context
ÅÅ 
.
ÅÅ 
SaveChanges
ÅÅ 
(
ÅÅ  
)
ÅÅ  !
;
ÅÅ! "
}
ÇÇ 	
}
ÉÉ 
}ÑÑ Û
MC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Repository\UsuarioRepository.cs
	namespace		 	
ExamenT3		
 
.		 

Repository		 
{

 
public 

	interface 
IUsuarioRepository '
{ 
public 
void 
	Registrar 
( 
string $
username% -
,- .
string/ 5
password6 >
)> ?
;? @
public 
Usuario 
FindUser 
(  
string  &
username' /
,/ 0
string1 7
password8 @
)@ A
;A B
public 
Usuario 

UserLogged !
(! "
Claim" '
claim( -
)- .
;. /
public 
ICollection 
< 
Usuario "
>" #
Listar$ *
(* +
)+ ,
;, -
} 
public 

class 
UsuarioRepository "
:# $
IUsuarioRepository% 7
{ 
private 
AppNotasContext 
_context  (
;( )
public 
UsuarioRepository  
(  !
AppNotasContext! 0
context1 8
)8 9
{ 	
_context 
= 
context 
; 
} 	
public 
Usuario 
FindUser 
(  
string  &
username' /
,/ 0
string1 7
password8 @
)@ A
{ 	
var 
user 
= 
_context 
.  
Usuarios  (
.( )
FirstOrDefault) 7
(7 8
o8 9
=>: <
o= >
.> ?
Username? G
==H J
usernameK S
&&T V
oW X
.X Y
PasswordY a
==b d
passworde m
)m n
;n o
return   
user   
;   
}!! 	
public## 
void## 
	Registrar## 
(## 
string## $
username##% -
,##- .
string##/ 5
password##6 >
)##> ?
{$$ 	
var%% 
user%% 
=%% 
new%% 
Usuario%% "
{%%# $
Username%%% -
=%%. /
username%%0 8
,%%8 9
Password%%: B
=%%C D
password%%E M
}%%N O
;%%O P
_context&& 
.&& 
Usuarios&& 
.&& 
Add&& !
(&&! "
user&&" &
)&&& '
;&&' (
_context'' 
.'' 
SaveChanges''  
(''  !
)''! "
;''" #
}(( 	
public** 
Usuario** 

UserLogged** !
(**! "
Claim**" '
claim**( -
)**- .
{++ 	
var,, 
user,, 
=,, 
_context,, 
.,,  
Usuarios,,  (
.,,( )
FirstOrDefault,,) 7
(,,7 8
o,,8 9
=>,,: <
o,,= >
.,,> ?
Username,,? G
==,,H J
claim,,K P
.,,P Q
Value,,Q V
),,V W
;,,W X
return-- 
user-- 
;-- 
}.. 	
public00 
ICollection00 
<00 
Usuario00 "
>00" #
Listar00$ *
(00* +
)00+ ,
{11 	
return22 
_context22 
.22 
Usuarios22 $
.22$ %
ToList22% +
(22+ ,
)22, -
;22- .
}33 	
}44 
}55 ˝
JC:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Service\CookieAuthService.cs
	namespace 	
ExamenT3
 
. 
Service 
{ 
public

 

	interface

 
ICookieAuthService

 '
{ 
public 
void 
Login 
( 
ClaimsPrincipal )
claim* /
)/ 0
;0 1
public 
Usuario 
GetUserLogged $
($ %
)% &
;& '
} 
public 

class 
CookieAuthService "
:# $
ICookieAuthService% 7
{ 
private 
HttpContext 
httpContext '
;' (
private 
AppNotasContext 
context  '
;' (
public 
CookieAuthService  
(  !
AppNotasContext! 0
context1 8
,8 9 
IHttpContextAccessor: N
httpContextAccessorO b
)b c
{ 	
this 
. 
httpContext 
= 
httpContextAccessor 2
.2 3
HttpContext3 >
;> ?
this 
. 
context 
= 
context "
;" #
} 	
public 
void 
Login 
( 
ClaimsPrincipal )
claim* /
)/ 0
{ 	
httpContext 
. 
SignInAsync #
(# $
claim$ )
)) *
;* +
} 	
private   
Claim   
GetClaim   
(   
)    
{!! 	
return"" 
httpContext"" 
."" 
User"" #
.""# $
Claims""$ *
.""* +
FirstOrDefault""+ 9
(""9 :
)"": ;
;""; <
}## 	
public%% 
Usuario%% 
GetUserLogged%% $
(%%$ %
)%%% &
{&& 	
var'' 
username'' 
='' 
this'' 
.''  
GetClaim''  (
(''( )
)'') *
.''* +
Value''+ 0
;''0 1
return(( 
this(( 
.(( 
context(( 
.((  
Usuarios((  (
.((( )
Where(() .
(((. /
x((/ 0
=>((1 3
x((4 5
.((5 6
Username((6 >
==((? A
username((B J
)((J K
.((K L
First((L Q
(((Q R
)((R S
;((S T
})) 	
}** 
}++ Ù"
8C:\Users\yanmi\source\repos\ExamenT3\ExamenT3\Startup.cs
	namespace 	
ExamenT3
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. #
AddControllersWithViews ,
(, -
)- .
;. /
services!! 
.!! 
AddDbContext!! !
<!!! "
AppNotasContext!!" 1
>!!1 2
(!!2 3
options"" 
=>"" 
options"" "
.""" #
UseSqlServer""# /
(""/ 0
Configuration""0 =
.""= >
GetConnectionString""> Q
(""Q R
$str""R ^
)""^ _
)""_ `
)## 
;## 
services%% 
.%% 
AddAuthentication%% &
(%%& '(
CookieAuthenticationDefaults%%' C
.%%C D 
AuthenticationScheme%%D X
)%%X Y
.&& 
	AddCookie&& 
(&& 
options&& "
=>&&# %
{'' 
options(( 
.(( 
	LoginPath(( %
=((& '
$str((( 5
;((5 6
})) 
))) 
;)) 
services++ 
.++ "
AddHttpContextAccessor++ +
(+++ ,
)++, -
;++- .
services,, 
.,, 
AddTransient,, !
<,,! "
ICookieAuthService,," 4
,,,4 5
CookieAuthService,,6 G
>,,G H
(,,H I
),,I J
;,,J K
services-- 
.-- 
AddTransient-- !
<--! "
IUsuarioRepository--" 4
,--4 5
UsuarioRepository--6 G
>--G H
(--H I
)--I J
;--J K
services.. 
... 
AddTransient.. !
<..! "
INotaRepository.." 1
,..1 2
NotaRepository..3 A
>..A B
(..B C
)..C D
;..D E
services// 
.// 
AddTransient// !
<//! "
IEtiquetaRepository//" 5
,//5 6
EtiquetaRepository//7 I
>//I J
(//J K
)//K L
;//L M
}00 	
public33 
void33 
	Configure33 
(33 
IApplicationBuilder33 1
app332 5
,335 6
IWebHostEnvironment337 J
env33K N
)33N O
{44 	
if55 
(55 
env55 
.55 
IsDevelopment55 !
(55! "
)55" #
)55# $
{66 
app77 
.77 %
UseDeveloperExceptionPage77 -
(77- .
)77. /
;77/ 0
}88 
else99 
{:: 
app;; 
.;; 
UseExceptionHandler;; '
(;;' (
$str;;( 5
);;5 6
;;;6 7
app== 
.== 
UseHsts== 
(== 
)== 
;== 
}>> 
app?? 
.?? 
UseHttpsRedirection?? #
(??# $
)??$ %
;??% &
app@@ 
.@@ 
UseStaticFiles@@ 
(@@ 
)@@  
;@@  !
appBB 
.BB 

UseRoutingBB 
(BB 
)BB 
;BB 
appDD 
.DD 
UseAuthenticationDD !
(DD! "
)DD" #
;DD# $
appEE 
.EE 
UseAuthorizationEE  
(EE  !
)EE! "
;EE" #
appGG 
.GG 
UseEndpointsGG 
(GG 
	endpointsGG &
=>GG' )
{HH 
	endpointsII 
.II 
MapControllerRouteII ,
(II, -
nameJJ 
:JJ 
$strJJ #
,JJ# $
patternKK 
:KK 
$strKK E
)KKE F
;KKF G
}LL 
)LL 
;LL 
}MM 	
}NN 
}OO 